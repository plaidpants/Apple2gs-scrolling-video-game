         keep  /apw.code/arcade.code/arcade.e         mcopy /apw.code/arcade.code/arcade.macros         copy  /apw.code/arcade.code/globals.asm         copy  2/ainclude/e16.prodosArcade   start         using DrawPage;this is the arcade game         phk                            get code bank for data bank         plb                            to access code data easily         lda   >$E0C029                 save old video registor value         sta   NewVideoRegister;init stuff         jsr   InitColors         lda   >$E0C029                   linearize super hires         ora   #$40         sta   >$E0C029         lda   >$E0C035                   turn off shadowing         ora   #%0000000001011111         sta   >$E0C035         jsr   InitDrawPage         lda   >$E0C029                   display super hires         ora   #%0000000010000000         sta   >$E0C029         jsr   InitTerrain         jsr   InitShape         jsr   InitEraseShapes         jsr   InitControl         lda   #0                       demo first         sta   PlayerDemo         jsr   InitDemo         jsr   InitShapeList         jsr   InitCritterGrid         jsr   InitCritterList;copy play screen from draw page to display screen         jsr   BlackScreen         ldx   #DrawPage         ldy   #$E12000         lda   #$8000-1         phb                            save data bank         mvn   DrawPage,$E12000         plb                            restore data bank;main looploop     jsr   ProcessKeyBoard         lda   KeyPressed         cmp   #$91                     quit cntrl-Q         bne   next1         jmp   Quitnext1    lda   PlayerDemo               if demo and keypressed then player         bne   next2         lda   KeyPressed         beq   next2         lda   #$FF         sta   PlayerDemo         jsr   InitPlayernext2    lda   PlayerDemo         bne   next3         jsr   ProcessDemo         bra   next4next3    jsr   ProcessControl         jsr   ProcessPlayernext4    jsr   ProcessCritterGrid         jsr   ProcessCritterList         jsr   ProcessShapeList         jsr   UpdateTerrainScreen         jsr   ProcessColors         jsr   EraseShapes         bra   loopquit     lda   NewVideoRegister         restore video registor         sta   >$E0C029         lda   #0                       indicate to shell no errors         _Quit QuitData                 return to calling programQuitData dc    i4'0'                    quit back to calling program         dc    i'0'                     no restart from memoryNewVideoRegister ds 2                   Video registor register save space         end