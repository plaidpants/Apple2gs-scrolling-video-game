         keep  /apw.code/arcade.code/player.e         copy  /apw.code/arcade.code/globals.asmInitControl start         stz   ControlType         stz   ControlButton1         stz   ControlButton2         stz   ControlDirection         stz   KeyPressed         rts         endProcessControl start         lda   KeyPressed         cmp   #$8A                     use joystick cntrl-J         bne   next11         lda   #0         sta   ControlType         bra   contnext11   cmp   #$8B                     use keyboard cntrl-K         bne   next12         lda   #1         sta   ControlType         bra   contnext12   anopcont     lda   ControlType         cmp   #0         bne   next21         jmp   Joysticknext21   cmp   #1         bne   next22         jmp   Keyboardnext22   anop         rts         endJoystick start         stz   ControlButton1         stz   ControlButton2         lda   #16         sta   ControlDirection         lda   >$E0C060         bpl   upbutton0         lda   JoystickButton0         bne   norelease0         lda   #$FFFF         sta   JoystickButton0         sta   ControlButton1         bra   norelease0upbutton0 lda  #0         sta   JoystickButton0norelease0 anop         lda   >$E0C061         bpl   upbutton1         lda   JoystickButton1         bne   norelease1         lda   #$FFFF         sta   JoystickButton1         sta   ControlButton1         bra   norelease1upbutton1 lda   #0         sta   JoystickButton1norelease1 anop         ldx   #0000         jsr   pread         cpy   #$07                     check for left         bge   right         lda   #0         sta   ControlDirection         bra   updownright    cpy   #$f7         blt   updown         lda   #2         sta   ControlDirectionupdown   ldx   #0001         jsr   pread         cpy   #$07         bge   down         lda   ControlDirection         cmp   #0         bne   skip11         lda   #4         sta   ControlDirection         rtsskip11   cmp   #2         bne   skip21         lda   #6         sta   ControlDirection         rtsskip21   lda   #8         sta   ControlDirection         rtsdown     cpy   #$f7         blt   done         lda   ControlDirection         cmp   #0         bne   skip12         lda   #10         sta   ControlDirection         rtsskip12   cmp   #2         bne   skip22         lda   #12         sta   ControlDirection         rtsskip22   lda   #14         sta   ControlDirectiondone     rtsptrig    equ   $E0C070paddlo   equ   $E0C063pread    anop         ldy   #$FF00         lda   >ptrig         nop         noppread2   lda   >paddlo,X         bpl   rst2d         iny         bne   pread2         deyrst2d    tya         and   #$00FF         tay         rtsJoystickButton0 entry         dc    i2'0'JoystickButton1 entry         dc    i2'0'         endKeyboard start         stz   ControlButton1         stz   ControlButton2         lda   #16         sta   ControlDirection         lda   KeyPressed         cmp   #$B8                     up 8         bne   next11         lda   #8         sta   ControlDirection         rtsnext11   cmp   #$B2                     down 2         bne   next12         lda   #14         sta   ControlDirection         rtsnext12   cmp   #$B4                     left 4         bne   next13         lda   #0         sta   ControlDirection         rtsnext13   cmp   #$B6                     right 6         bne   next14         lda   #2         sta   ControlDirection         rtsnext14   cmp   #$B7                     up left 7         bne   next15         lda   #4         sta   ControlDirection         rtsnext15   cmp   #$B9                     up right 9         bne   next16         lda   #6         sta   ControlDirection         rtsnext16   cmp   #$B1                     down left 1         bne   next17         lda   #10         sta   ControlDirection         rtsnext17   cmp   #$B3                     down right 3         bne   next18         lda   #12         sta   ControlDirection         rtsnext18   cmp   #$A0                     button1 space         bne   next19         lda   #$0001         sta   ControlButton1         rtsnext19   cmp   #$8D                     button2 return         bne   next20         lda   #$0001         sta   ControlButton2next20   rts         endProcessKeyboard start         lda   #0         sta   KeyPressed         lda   >$E0C000                   keyboard port         bit   #$80                     check if key pressed         beq   exit         and   #$FF         sta   KeyPressed         lda   >$E0C010exit     rts         endInitPlayer start         using ShipData;posistion ship on terrain and set ship globals         lda   ShipStartTerrainX         sta   NewTerrainX         lda   ShipStartTerrainY         sta   NewTerrainY         jsr   UpdateTerrain         lda   ShipStartTerrainX         sta   CritterGridX         lda   ShipStartTerrainY         sta   CritterGridY         lda   ShipStartX         sta   ShipX         lda   ShipStartY         sta   ShipY         lda   ShipStartDirection         sta   ShipDirection         tax         lda   ShipXPlusTable,x         sta   ShipXPlus         lda   ShipYPlusTable,x         sta   ShipYPlus         lda   #0         sta   ShipShapeListNumber         lda   #$FFFF                   just starting         sta   ShipCounter         rts         endProcessPlayer start         using CritterList         using ShapeListData         using ShipData         lda   KeyPressed         cmp   #$92                     restart cntrl-R         bne   norestart         lda   #0         sta   PlayerDemo         jmp   InitDemonorestart anop         cmp   #$9B                     pause game esc         bne   cont1;ADD code to display pausing indicator         lda   >$E0C010                   clear keyboardloop5    lda   >$E0C001                   pause until key pressed         bpl   loop5;        lda   >$E0C010                   clear keyboard         bra   cont1cont1    anop         lda   ShipCounter              just starting?         cmp   #$FFFE                   let run at least once         bne   skip1         lda   #0                       reset counter         sta   ShipCounter;ADD player start and wait for response messageskip1    anop;test for ship destroyed and wait for reset         lda   ShipCounter         beq   ok1         dec   ShipCounter         bne   done;ADD reset playerdone     rtsok1      anop;test for collision         lda   ShipShapeListNumber         tax         lda   ShapeCollisionTypeList,x         beq   ok2         lda   #20         sta   ShipCounter;ADD ship explosion critter defintion to critter listok2      anop;adjust control values for turn around         lda   ControlDirection         cmp   #16         beq   skip2         lda   ShipDirection         asl   a                        *8         asl   a         asl   a         clc         adc   ControlDirection         tax         lda   ShipDirectionTable,x         sta   ShipDirection         tax         lda   ShipXPlusTable,x         sta   ShipXPlus         lda   ShipYPlusTable,x         sta   ShipYPlus;move terrainskip2    lda   TerrainX         clc         adc   ShipXPlus         sta   NewTerrainX         lda   TerrainY         clc         adc   ShipYPlus         sta   NewTerrainY         jsr   ProcessTerrain         lda   CritterGridX         clc         adc   ShipXPlus         sta   CritterGridX         lda   CritterGridY         clc         adc   ShipYPlus         sta   CritterGridY         lda   ShipX         clc         adc   ShipXPlus         sta   ShipX         sta   ShapeX         lda   ShipY         clc         adc   ShipYPlus         sta   ShipY         sta   ShapeY         lda   ShipDirection         tax         lda   ShipShapeNumberTable,x         sta   ShapeNumber         lda   ShipShapeClass         sta   ShapeClass         lda   ShipShapePriority         sta   ShapePriority         lda   NumberInShapeList         sta   ShipShapeListNumber         jsr   AddToShapeList         lda   ControlButton1         beq   skip3         lda   ShipShot1Definition         sta   CritterDefinitionNumber         jsr   AddToCritterList         ldx   CritterListNumber         lda   ShipX         sta   >CritterList+2,x         lda   ShipY         sta   >CritterList+4,x         lda   ShipXPlus         asl   a         asl   a         sta   >CritterList+6,x         lda   ShipYPlus         asl   a         asl   a         sta   >CritterList+8,xskip3    anop         lda   ControlButton2         beq   skip4         lda   ShipShot2Definition         sta   CritterDefinitionNumber         jsr   AddToCritterList         ldx   CritterListNumber         lda   ShipX         sta   >CritterList+2,x         lda   ShipY         sta   >CritterList+4,x         lda   ShipXPlus         asl   a         sta   >CritterList+6,x         lda   ShipYPlus         asl   a         sta   >CritterList+8,xskip4    anop         rts;tables to correct for ship turnsShipDirectionTable entry         dc    i2'0,4,4,4,4,10,10,10'         dc    i2'12,2,6,6,6,12,12,12'         dc    i2'0,8,4,8,8,0,8,0'         dc    i2'8,2,8,6,8,2,2,2'         dc    i2'4,6,4,6,8,4,6,6'         dc    i2'0,14,0,0,0,10,14,14'         dc    i2'14,2,14,2,2,14,12,14'         dc    i2'10,12,10,12,10,10,12,14'ShipXPlusTable entry         dc    i2'$FFE0,$0020,$FFE0,$0020,$0000,$FFE0,$0020,$0000'ShipYPlusTable entry         dc    i2'$0000,$0000,$FFE0,$FFE0,$FFE0,$0020,$0020,$0020'         endShipData data;ship characteristicsShipStartTerrainX dc i2'$0000'ShipStartTerrainY dc i2'$0000'ShipStartX dc  i2'$0380'ShipStartY dc  i2'$0280'ShipStartDirection dc i2'8'ShipShapeNumberTable dc i2'0,1,2,3,4,5,6,7'ShipExplosion dc i2'0'ShipCounter dc i2'0'ShipShot1Definition dc i2'$0100'ShipShot2Definition dc i2'$0100'ShipShapePriority dc i2'0'ShipShapeClass dc i2'0'ShipShapeListNumber dc i2'0'         endInitDemo Start         using ShipData         lda   ShipStartTerrainX         sta   NewTerrainX         lda   ShipStartTerrainY         sta   NewTerrainY         jsr   UpdateTerrain         lda   ShipStartTerrainX         sta   CritterGridX         lda   ShipStartTerrainY         sta   CritterGridY         lda   ShipStartX         sta   ShipX         lda   ShipStartY         sta   ShipY         lda   ShipStartDirection         sta   ShipDirection         tax         lda   ShipXPlusTable,x         sta   ShipXPlus         lda   ShipYPlusTable,x         sta   ShipYPlus         lda   #0         sta   ShipShapeListNumber         sta   ShipCounter         rts         endProcessDemo start         using ShapeListData         using ShipData         lda   TerrainX         clc         adc   ShipXPlus         sta   NewTerrainX         lda   TerrainY         clc         adc   ShipYPlus         sta   NewTerrainY         jsr   ProcessTerrain         lda   CritterGridX         clc         adc   ShipXPlus         sta   CritterGridX         lda   CritterGridY         clc         adc   ShipYPlus         sta   CritterGridY         lda   ShipX         clc         adc   ShipXPlus         sta   ShipX         sta   ShapeX         lda   ShipY         clc         adc   ShipYPlus         sta   ShipY         sta   ShapeY         lda   ShipDirection         tax         lda   ShipShapeNumberTable,x         sta   ShapeNumber         lda   #0         sta   ShapeClass         lda   NumberInShapeList         sta   ShipShapeListNumber         jsr   AddToShapeList         lda   ControlButton1         beq   skip1;ADD ship shot 1 critter defintion to critter list in direction of shipskip1    anop         lda   ControlButton2         beq   skip2;ADD ship shot 2 critter defintion to critter list in direction of shipskip2    anop         rts         end