         keep  /apw.code/arcade.code/player.e         copy  /apw.code/arcade.code/globals.asmInitControl start         stz   ControlType         stz   KeyPressed         rts         endControl  start         jsr   ReadKeyboard         lda   KeyPressed         cmp   #$8A                     use joystick cntrl-J         bne   next1         lda   #0         sta   ControlType         bra   next2next1    cmp   #$8B                     use keyboard cntrl-K         bne   next2         lda   #1         sta   ControlTypenext2    anop         lda   ControlType         cmp   #0         bne   next3         jmp   Joysticknext3    cmp   #1         bne   next4         jmp   Keyboardnext4    rts         endJoystick start         stz   ControlButton1         stz   ControlButton2         stz   ControlXPlus         stz   ControlYPlus         lda   #16         sta   ControlDirection         ldx   #0000         jsr   pread         cpy   #$07                     check for left         bge   right         lda   #$FFE0         sta   ControlXPlus         lda   #0         sta   ControlDirection         bra   updownright    cpy   #$f7         blt   updown         lda   #$0020         sta   ControlXPlus         lda   #2         sta   ControlDirectionupdown   ldx   #0001         jsr   pread         cpy   #$07         bge   down         lda   #$FFE0         sta   ControlYPlus         lda   ControlDirection         cmp   #0         bne   skip11         lda   #4         sta   ControlDirection         rtsskip11   cmp   #2         bne   skip21         lda   #6         sta   ControlDirection         rtsskip21   lda   #8         sta   ControlDirection         rtsdown     cpy   #$f7         blt   done         lda   #$0020         sta   ControlYPlus         lda   ControlDirection         cmp   #0         bne   skip12         lda   #10         sta   ControlDirection         rtsskip12   cmp   #2         bne   skip22         lda   #12         sta   ControlDirection         rtsskip22   lda   #14         sta   ControlDirectiondone     rtsptrig    equ   $00C070paddlo   equ   $00C063pread    anop         ldy   #$FF00         lda   >ptrig         nop         noppread2   lda   >paddlo,X         bpl   rst2d         iny         bne   pread2         deyrst2d    tya         and   #$00FF         tay         rtsJoystickButton0 entry         dc    i2'0'JoystickButton1 entry         dc    i2'0'         endKeyboard start         stz   ControlButton1         stz   ControlButton2         stz   ControlXPlus         stz   ControlYPlus         lda   #16         sta   ControlDirection         lda   KeyPressed         cmp   #$B8                     up 8         bne   next11         lda   #$0000         sta   ControlXPlus         lda   #$FFE0         sta   ControlYPlus         lda   #16         sta   ControlDirection         rtsnext11   cmp   #$B2                     down 2         bne   next12         lda   #$0000         sta   ControlXPlus         lda   #$0020         sta   ControlYPlus         lda   #16         sta   ControlDirection         rtsnext12   cmp   #$B4                     left 4         bne   next13         lda   #$FFE0         sta   ControlXPlus         lda   #$0000         sta   ControlYPlus         lda   #16         sta   ControlDirection         rtsnext13   cmp   #$B6                     right 6         bne   next14         lda   #$0020         sta   ControlXPlus         lda   #$0000         sta   ControlYPlus         lda   #16         sta   ControlDirection         rtsnext14   cmp   #$B7                     up left 7         bne   next15         lda   #$FFE0         sta   ControlXPlus         lda   #$FFE0         sta   ControlYPlus         lda   #16         sta   ControlDirection         rtsnext15   cmp   #$B9                     up right 9         bne   next16         lda   #$0020         sta   ControlXPlus         lda   #$FFE0         sta   ControlYPlus         lda   #16         sta   ControlDirection         rtsnext16   cmp   #$B1                     down left 1         bne   next17         lda   #$FFE0         sta   ControlXPlus         lda   #$0020         sta   ControlYPlus         lda   #16         sta   ControlDirection         rtsnext17   cmp   #$B3                     down right 3         bne   next18         lda   #$0020         sta   ControlXPlus         lda   #$0020         sta   ControlYPlus         lda   #16         sta   ControlDirection         rtsnext18   cmp   #$A0                     button1 space         bne   next19         lda   #$0001         sta   ControlButton1         rtsnext19   cmp   #$8D                     button2 return         bne   next20         lda   #$0001         sta   ControlButton2next20   rtsReadKeyboard  entry         lda   #0         sta   KeyPressed         lda   >$C000                   keyboard port         bit   #$0080                   check if key pressed         beq   exit         and   #$00FF         sta   KeyPressed         lda   >$C010                   clear keyboardexit     rts         endInitPlayer start;posistion ship on terrain and set ship globals         lda   TerrainX         clc         adc   #$0380         sta   ShipX         lda   TerrainY         clc         adc   #$0280         sta   ShipY         lda   #10         sta   ShipDirection         tax         lda   ShipXPlusTable,x         sta   ShipXPlus         lda   ShipYPlusTable,x         sta   ShipYPlus         rts         endProcessPlayer start;do everything associated with the players ship         jsr   Control;adjust control values for turnaround         lda   ControlDirection         cmp   #16         beq   skip         lda   ShipDirection         asl   a                        *8         asl   a         asl   a         clc         adc   ControlDirection         tax         lda   ShipDirectionTable,x         sta   ShipDirection         tax         lda   ShipXPlusTable,x         sta   ShipXPlus         lda   ShipYPlusTable,x         sta   ShipYPlus;move terrainskip     lda   TerrainX         clc         adc   ShipXPlus         sta   NewTerrainX         lda   TerrainY         clc         adc   ShipYPlus         sta   NewTerrainY         jsr   MoveTerrain         lda   ShipX         clc         adc   ShipXPlus         sta   ShipX         sta   ShapeX         lda   ShipY         clc         adc   ShipYPlus         sta   ShipY         sta   ShapeY         lda   ShipDirection         asl   a         lda   ShipAddressList,x         sta   ShapeAddress         lda   ShipAddressList+2,x         sta   ShapeAddress+2         lda   MaskAddressList,x         sta   MaskAddress         lda   MaskAddressList+2,x         sta   MaskAddress+2         lda   #0         sta   ShapeStartX         lda   #0         sta   ShapeStartY         lda   #16*3         sta   ShapeWidth         lda   #16*3         sta   ShapeDrawWidth         lda   #32*2         sta   ShapeHeight         lda   #32*2         sta   ShapeDrawHeight         jsr   DrawShape;need to shoot when button here         rts;tables for ship turnsShipDirectionTable entry         dc    i2'0,4,4,4,4,10,10,10'         dc    i2'12,2,6,6,6,12,12,12'         dc    i2'0,8,4,8,8,0,8,0'         dc    i2'8,2,8,6,8,2,2,2'         dc    i2'4,6,4,6,8,4,6,6'         dc    i2'0,14,0,0,0,10,14,14'         dc    i2'14,2,14,2,2,14,12,14'         dc    i2'10,12,10,12,10,10,12,14'ShipXPlusTable entry         dc    i2'$FFE0,$0020,$FFE0,$0020,$0000,$FFE0,$0020,$0000'ShipYPlusTable entry         dc    i2'$0000,$0000,$FFE0,$FFE0,$FFE0,$0020,$0020,$0020'ShipAddressList entry         dc    i4'ShipShapes,ShipShapes,ShipShapes,ShipShapes'         dc    i4'ShipShapes,ShipShapes,ShipShapes,ShipShapes'MaskAddressList entry         dc    i4'ShipShapes,ShipShapes,ShipShapes,ShipShapes'         dc    i4'ShipShapes,ShipShapes,ShipShapes,ShipShapes'ShipShapes entry         ds    32*16*8         end