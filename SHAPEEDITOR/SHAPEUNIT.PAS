unit ShapeUnit;interfaceuses		QDIntf,	GSIntf,		MiscTools,	ConsoleIO,	Prodos16,	FontMgr,	ListMgr,	PrintMgr;	const		ScreenMode=$00;	MaxX=320;	AppleMenu=300;	AboutItem=301;		FileMenu=400;	LoadShapeItem=401;	SaveShapeItem=402;	LoadColorItem=409;	SaveColorItem=410;	LoadTerrainItem=403;	SaveTerrainItem=404;	PageSetUpItem=405;	ChooserItem=406;	PrintItem=407;	QuitItem=408;		EditMenu=500;	UndoItem=501;	CutItem=503;	CopyItem=504;	PasteItem=505;	ClearItem=506;	WindowMenu=600;	PaletteItem=601;	TerrainItem=602;	ShapeItem=603;	CritterItem=608;	PaletteEditorItem=606;	EditorItem=604;	AnimationEditorItem=607;	HideWindowItem=605;		OptionsMenu=700;	GridItem=701;	FlipHorzItem=702;	FlipVertItem=703;	MoveLeftItem=704;	MoveUpItem=705;	QuarterScaleItem=706;	HalfScaleItem=707;	FullScaleItem=708;	BigBrushItem=709;	CoordItem=710;	CycleItem=711;	AnimationOptionItem=712;	type	TerrainTypeHandle= ^TerrainTypePtr;	TerrainTypePtr= ^TerrainType;	TerrainType= packed array [0..255,0..255] of byte;		CritterDefinitionType= array [0..255] of		record			Empty:boolean;			offSet:point;			critter,Mask:integer;		end;			myCursor=		record			CursorHeight,			CursorWidth:Integer;			data,			mask:array[1..11,1..2] of longint;			hotSpot:Point;		end;var		MemoryID:Integer;	ToolsZeroPage:Handle;	Quitting,	Done:Boolean;	ShapeWindPtr,	EditorWindPtr,	TerrainWindPtr,	PaletteWindPtr,	PaletteEditorWindPtr,	CritterWindPtr,	AnimationEditorWindPtr:WindowPtr;		ShapePort:GrafPtr;	ShapeLocInfo:LocInfoRec;	ShapeHandle:Handle;	ShapeOffscreenPort:GrafPtr;	ShapeOffscreenLocInfo:LocInfoRec;	ShapeOffscreenHandle:Handle;	TerrainHandle:TerrainTypeHandle;		EditorShapeNumber,	PaletteColorNumber,	CopyShapeNumber:integer;		TerrainCopyRect:Rect;	TerrainPastePoint:Point;		GridOption,	coord:boolean;		GridPort:GrafPtr;	GridLocInfo:LocInfoRec;	GridHandle:Handle;		PrintHdl:THPrint;	TheCursor:integer;	CrossCursor:myCursor;	AppleMenuStr,	FileMenuStr,	EditMenuStr,	WindowMenuStr,	OptionsMenuStr:str255;	MenuHeight:integer;	scale:integer;		BrushSize:integer;		TypeList:TypeListRec;	myReply:ReplyRecord;	P16Blk:P16ParamBlk;	  PaletteScrollArray:array [1..5] of ControlHandle;	Colors:array [0..15] of colorTable;	ColorSetNumber:integer;	CycleOption:boolean;	LastColorCycle:longint;	ColorCycleSpeed:integer;		CritterOption:boolean;	CritterShapeNumber:integer;	CritterTerrainHandle:TerrainTypeHandle;	CritterPort:GrafPtr;	CritterLocInfo:LocInfoRec;	CritterHandle:Handle;	CritterDefinition:CritterDefinitionType;		AnimationScrollArray:array [1..8] of ControlHandle;	AnimationNumber:integer;	AnimationOption:boolean;	AnimationSequence:integer;	AnimationSpeed:integer;	LastAnimation:Longint;	procedure StartUpGSTools;procedure ShutDownGSTools;Procedure SetUpMenus;Procedure SetUpGridScreen;Procedure SetUpShapeOffScreen;Procedure UpdateShapeWindow;Procedure SetUpShapeWindow;Procedure UpdateShapeOffscreen;Procedure UpdatePaletteEditorWindow;procedure SetUpColors;Procedure SetUpPaletteEditorWindow;Procedure SetUpTerrainOffScreen;Procedure UpdateTerrainWindow;Procedure SetUpTerrainWindow;Procedure UpdateEditorWindow;Procedure SetUpEditorWindow;Procedure UpdatePaletteWindow;Procedure SetUpPaletteWindow;procedure SetUpCrossCursor;Procedure SetUpCritterWindow;Procedure UpdateCritterWindow;Procedure SetUpCritterOffScreen;procedure SetUpCritterDefinition;Procedure UpdateAnimationEditorWindow;Procedure SetUpAnimationEditorWindow;implementationprocedure StartUpGSTools;var		ToolRec:ToolTable;	svToolErrorNum,	btn:integer;	begin	TLStartUp;	MemoryID:=MMStartUp;	MTStartUp;	ToolsZeroPage:=NewHandle(11*256,MemoryID,FixedBank+PageAligned+Fixedblk+Locked,ptr(0));	QDStartUp(LoWord(ToolsZeroPage^),ScreenMode,160,MemoryID);	MoveTo(40,40);	SetBackColor(0);	SetForeColor(15);	DrawString('One moment please...');	ToolRec.NumTools:=14;	ToolRec.Tools[1].TSNum:=4;	ToolRec.Tools[1].MinVersion:=1;	ToolRec.Tools[2].TSNum:=5;	ToolRec.Tools[2].MinVersion:=1;	ToolRec.Tools[3].TSNum:=6;	ToolRec.Tools[3].MinVersion:=1;	ToolRec.Tools[4].TSNum:=14;	ToolRec.Tools[4].MinVersion:=0;	ToolRec.Tools[5].TSNum:=15;	ToolRec.Tools[5].MinVersion:=1;	ToolRec.Tools[6].TSNum:=16;	ToolRec.Tools[6].MinVersion:=1;	ToolRec.Tools[7].TSNum:=21;	ToolRec.Tools[7].MinVersion:=0;	ToolRec.Tools[8].TSNum:=20;	ToolRec.Tools[8].MinVersion:=0;	ToolRec.Tools[9].TSNum:=22;	ToolRec.Tools[9].MinVersion:=0;	ToolRec.Tools[10].TSNum:=23;	ToolRec.Tools[10].MinVersion:=0;	ToolRec.Tools[11].TSNum:=18;	ToolRec.Tools[11].MinVersion:=0;	ToolRec.Tools[12].TSNum:=27;	ToolRec.Tools[12].MinVersion:=0;	ToolRec.Tools[13].TSNum:=28;	ToolRec.Tools[13].MinVersion:=0;	ToolRec.Tools[14].TSNum:=19;	ToolRec.Tools[14].MinVersion:=0;	repeat		LoadTools(ToolRec);		svToolErrorNum:=ToolErrorNum;		if svToolErrorNum <> 0 then 			begin				btn:=TLMountVolume(100,40,'Error loading tools','Insert System Disk','Ok','Cancel');				if btn <> 1 then						SysFailMgr(svToolErrorNum,'Unable to load tools');			end;	until svToolErrorNum = 0;   	QDAuxStartUp;	EMStartUp(LoWord(ToolsZeroPage^)+$300,20,0,MaxX,0,200,MemoryID);  WindStartUp(MemoryID);		RefreshDesktop(nil);	CtlStartUp(MemoryID,LoWord(ToolsZeroPage^)+$400);	MenuStartUp(MemoryID,LoWord(ToolsZeroPage^)+$500);	LEStartUp(MemoryID,LoWord(ToolsZeroPage^)+$600);	DialogStartUp(MemoryID);  ScrapStartUp;	DeskStartUp;  SFStartUp(MemoryID,LoWord(ToolsZeroPage^)+$700);	ListStartUp;	FMStartUp(MemoryID,LoWord(ToolsZeroPage^)+$800);	PMStartUp(MemoryID,LoWord(ToolsZeroPage^)+$900);		Printhdl:=THPrint(NewHandle(140,memoryID,noBankCross,Ptr(0)));		PRDefault(Printhdl);end;procedure ShutDownGSTools;	begin		GrafOff;		DeskShutDown;		PMShutDown;		FMShutDown;		ListShutDown;		SFShutDown;		DialogShutDown;		LEShutDown;		ScrapShutDown;		MenuShutDown;		WindShutDown;		CtlShutDown;		EMShutDown;		QDAuxShutDown;		QDShutDown;		MTShutDown;		MMShutDown(MemoryID);		TLShutDown;	end;		Procedure SetUpMenus;			begin		AppleMenuStr:=ConCat(	'>>@\XN300\0',													'==About Shape Editor...\N301\0',													'==-\N302D\0..');		FileMenuStr:=ConCat(	'>>  File  \N400\0',													'==Load Shape\N401\0',													'==Save Shape\N402\0',													'==-\N502D\0',													'==Load Colors\N409\0',													'==Save Colors\N410\0',													'==-\N502D\0',													'==Load Terrain\N403\0',													'==Save Terrain\N404\0',													'==-\N502D\0',													'==Page Setup\N405\0',													'==Chooser\N406\0',													'==Print\N407\0',																										'==-\N502D\0',													'==Quit\N408*Qq\0.');		EditMenuStr:=ConCat(	'>>  Edit  \N500\0',													'==Undo\N501*Zz\0',													'==-\N502D\0',													'==Cut\N503*Xx\0',													'==Copy\N504*Cc\0',													'==Paste\N505*Vv\0',													'==Clear\N506\0.');		WindowMenuStr:=ConCat('>>  Window  \N600\0',													'==Palette\N601*Pp\0',													'==Terrain\N602*Tt\0',													'==Shape\N603*Ss\0',													'==Critter\N608\0',													'==Editor\N604*Ee\0',													'==Palette Editor\N606*Ww\0',													'==Animation Editor\N607*Aa\0',													'==Hide\N605\0.');		OptionsMenuStr:=ConCat('>>  Options  \N700\0',													'==Grid\N701\0',													'==Flip Horz\N702\0',													'==Flip Vert\N703\0',													'==Move Left\N704\0',													'==Move Up\N705\0',													'==3/4 Scale\N706\0',													'==1/2 Scale\N707\0',													'==1/1 Scale\N708\0',													'==Coord\N710\0',													'==Cycle\N711\0',													'==Animation\N712\0',													'==Big Brush\N709\0.');		SetMTitleStart(10);				InsertMenu(NewMenu(@OptionsMenuStr[1]),0);		InsertMenu(NewMenu(@WindowMenuStr[1]),0);		InsertMenu(NewMenu(@EditMenuStr[1]),0);		InsertMenu(NewMenu(@FileMenuStr[1]),0);		InsertMenu(NewMenu(@AppleMenuStr[1]),0);				FixAppleMenu(AppleMenu);		MenuHeight:=FixMenuBar;		DrawMenuBar;	end;Procedure SetUpGridScreen;		var		i:integer;			begin	  GridHandle:=NewHandle(16*32*4*4,MemoryID,SpecialMem+PageAligned+Fixedblk+Locked,nil);		GridLocInfo.PortSCB:=$00;		GridLocInfo.PixelImage:=ptr(GridHandle^);		GridLocInfo.width:=16*4;		SetRect(GridLocInfo.BoundsRect,0,0,32*4,32*4);				New(GridPort);		OpenPort(GridPort);		SetPortLoc(GridLocInfo);		SetPortRect(GridLocInfo.BoundsRect);		ClipRect(GridLocInfo.BoundsRect);		GetClip(GridPort^.VisRgn);		EraseRect(GridPort^.PortRect);		SetSolidPenPat(0);		for i:=0 to 31 do			begin				moveto(0,i*4);				lineto(128,i*4);				moveto(i*4,0);				lineto(i*4,128);			end;	end;Procedure SetUpShapeOffScreen;			begin	  ShapeHandle:=NewHandle(16*32*256,MemoryID,SpecialMem+PageAligned+Fixedblk+Locked,nil);		ShapeLocInfo.PortSCB:=$00;		ShapeLocInfo.PixelImage:=ptr(ShapeHandle^);		ShapeLocInfo.width:=16;		SetRect(ShapeLocInfo.BoundsRect,0,0,32,8192);				New(ShapePort);		OpenPort(ShapePort);		SetPortLoc(ShapeLocInfo);		SetPortRect(ShapeLocInfo.BoundsRect);		ClipRect(ShapeLocInfo.BoundsRect);		GetClip(ShapePort^.VisRgn);		EraseRect(ShapePort^.PortRect);	  ShapeOffscreenHandle:=NewHandle(16*32*16*16,MemoryID,SpecialMem+PageAligned+Fixedblk+Locked,nil);		ShapeOffscreenLocInfo.PortSCB:=$00;		ShapeOffscreenLocInfo.PixelImage:=ptr(ShapeOffscreenHandle^);		ShapeOffscreenLocInfo.width:=16*16;		SetRect(ShapeOffscreenLocInfo.BoundsRect,0,0,32*16,32*16);				New(ShapeOffscreenPort);		OpenPort(ShapeOffscreenPort);		SetPortLoc(ShapeOffscreenLocInfo);		SetPortRect(ShapeOffscreenLocInfo.BoundsRect);		ClipRect(ShapeOffscreenLocInfo.BoundsRect);		GetClip(ShapeOffscreenPort^.VisRgn);		EraseRect(ShapeOffscreenPort^.PortRect);	end;Procedure UpdateShapeOffscreen;	var		ShapeRect,		TempRect1,		TempRect2,		DestRect:Rect;		i,j:integer;			begin		SetPort(ShapeOffscreenPort);		EraseRect(ShapeOffscreenPort^.PortRect);		SetRect(ShapeRect,0,0,32,32);		SetRect(DestRect,0,0,scale,scale);					for i:=0 to 15 do			for j:=0 to 15 do				begin					TempRect1:=ShapeRect;					TempRect2:=DestRect;					OffsetRect(TempRect1,0,32*(i*16+j));					OffsetRect(TempRect2,i*scale,j*scale);					CopyPixels(ShapePort^.PortInfo,ShapeOffscreenPort^.PortInfo,TempRect1,TempRect2,SrcCopy,ShapeOffscreenPort^.VisRgn);				end;	end;Procedure UpdateShapeWindow;		var		destRect:Rect;			begin		PPtoPort(ShapeOffscreenPort^.PortInfo,ShapeOffscreenPort^.PortRect,0,0,SrcCopy);		SetRect(DestRect,0,0,scale,scale);		offsetRect(DestRect,EditorShapeNumber div 16 * scale,EditorShapeNumber mod 16 * scale);		Setsolidpenpat(0);		FrameRect(DestRect);	end;var	ShapeWindTitle:str255;	ShapeWind:newWindowParamBlk;Procedure SetUpShapeWindow;		begin		ShapeWindTitle:='Shape';		With ShapeWind do			begin				param_length:=Sizeof(NewWindowParamBlk);				Wframe:=$9CA8;				WTitle:=@ShapeWindTitle;				wRefCon:=0;				SetRect(wZoom,0,0,64,160);				offsetRect(wZoom,0,32);				wColor:=nil;				wYOrigin:=0;				wXOrigin:=0;				wDataH:=512;				wDataW:=512;				wMaxH:=200;				wMaxW:=320;				wScrollver:=32;				wScrollHor:=32;				wPageVer:=32*4;				wPageHor:=32*4;				wInfoRefCon:=0;				wInfoHeight:=0;				wFrameDefProc:=nil;				wInfoDefProc:=nil;				wContDefProc:=@UpdateShapeWindow;				wPosition:=wZoom;				wPlane:=-1;				wStorage:=nil;			end;		ShapeWindPtr:=NewWindow(ShapeWind);	end;Procedure SetUpCritterOffScreen;			begin	  CritterHandle:=NewHandle(16*32*256,MemoryID,SpecialMem+PageAligned+Fixedblk+Locked,nil);		CritterLocInfo.PortSCB:=$00;		CritterLocInfo.PixelImage:=ptr(CritterHandle^);		CritterLocInfo.width:=16;		SetRect(CritterLocInfo.BoundsRect,0,0,32,8192);				New(CritterPort);		OpenPort(CritterPort);		SetPortLoc(CritterLocInfo);		SetPortRect(CritterLocInfo.BoundsRect);		ClipRect(CritterLocInfo.BoundsRect);		GetClip(CritterPort^.VisRgn);		EraseRect(CritterPort^.PortRect);	end;procedure SetUpCritterDefinition;	var		i,j:integer;			begin		for i:=0 to 255 do			with CritterDefinition[i] do				begin					Empty:=true;					SetPt(Offset,0,0);					Critter:=0;					Mask:=0;				end;	end;	Procedure UpdateCritterWindow;	var		ShapeRect,		TempRect,		PortRect,		DestRect:Rect;		i,j,RightSide,BottomSide:integer;			begin		PortRect:=CritterWindPtr^.PortRect;		SetRect(ShapeRect,0,0,32,32);		RightSide:=PortRect.right div Scale +1;		if RightSide>15 then			rightSide:=15;		BottomSide:=PortRect.bottom div Scale +1;		if BottomSide>15 then			BottomSide:=15;					for i:=PortRect.left div Scale to rightSide do			for j:=PortRect.top div Scale to BottomSide do				begin					TempRect:=ShapeRect;					SetRect(DestRect,0,0,scale,scale);					OffsetRect(TempRect,0,32*(i*16+j));					OffsetRect(DestRect,i*scale,j*scale);					CopyPixels(CritterPort^.PortInfo,CritterWindPtr^.PortInfo,TempRect,DestRect,SrcCopy,CritterWindPtr^.VisRgn);					if i*16+j=CritterShapeNumber then						begin							Setsolidpenpat(0);							FrameRect(DestRect);						end;				end;	end;var	CritterWindTitle:str255;	CritterWind:newWindowParamBlk;Procedure SetUpCritterWindow;		begin		CritterWindTitle:='Critter';		With CritterWind do			begin				param_length:=Sizeof(NewWindowParamBlk);				Wframe:=$9CA8;				WTitle:=@CritterWindTitle;				wRefCon:=0;				SetRect(wZoom,0,0,64,160);				offsetRect(wZoom,0,32);				wColor:=nil;				wYOrigin:=0;				wXOrigin:=0;				wDataH:=512;				wDataW:=512;				wMaxH:=200;				wMaxW:=320;				wScrollver:=32;				wScrollHor:=32;				wPageVer:=32*4;				wPageHor:=32*4;				wInfoRefCon:=0;				wInfoHeight:=0;				wFrameDefProc:=nil;				wInfoDefProc:=nil;				wContDefProc:=@UpdateCritterWindow;				wPosition:=wZoom;				wPlane:=-1;				wStorage:=nil;			end;		CritterWindPtr:=NewWindow(CritterWind);	end;	procedure SetUpColors;	var		i:integer;			begin		for i:=0 to 15 do	  	GetColorTable(0,Colors[i]);	end;	Procedure UpdatePaletteEditorWindow;	var		theColor,		i:integer;		ColorRect:Rect;		begin	theColor:=Colors[GetCtlValue(PaletteScrollArray[4]),PaletteColorNumber];	SetSolidPenPat(PaletteColorNumber);	for i:=1 to 3 do		begin			SetCtlValue(TheColor mod 16,PaletteScrollArray[i]);			TheColor:=TheColor div 16;		end;	SetCtlValue(ColorCycleSpeed,PaletteScrollArray[5]);	SetRect(ColorRect,18*5,0,18*6,100);	PaintRect(ColorRect);	DrawControls(PaletteEditorWindPtr);end;var	PaletteEditorWindTitle:str255;	PaletteEditorWind:newWindowParamBlk;Procedure SetUpPaletteEditorWindow;		var		r:rect;		i:integer;			begin		PaletteEditorWindTitle:='Palette Ed';		With PaletteEditorWind do			begin				param_length:=Sizeof(NewWindowParamBlk);				Wframe:=$80A8;				WTitle:=@PaletteEditorWindTitle;				wRefCon:=0;				SetRect(wZoom,0,0,18*6,100);				offsetRect(wZoom,0,32);				wColor:=nil;				wYOrigin:=0;				wXOrigin:=0;				wDataH:=100;				wDataW:=18*6;				wMaxH:=100;				wMaxW:=18*6;				wScrollver:=0;				wScrollHor:=0;				wPageVer:=0;				wPageHor:=0;				wInfoRefCon:=0;				wInfoHeight:=0;				wFrameDefProc:=nil;				wInfoDefProc:=nil;				wContDefProc:=@UpdatePaletteEditorWindow;				wPosition:=wZoom;				wPlane:=-1;				wStorage:=nil;			end;		PaletteEditorWindPtr:=NewWindow(PaletteEditorWind);			SetRect(r,0,0,17,100);	for i := 1 to 5 do		begin	  	PaletteScrollArray[i]:=NewControl(PaletteEditorWindPtr,r,'',$0003,0,1,16,ProcPtr($06000000),0,nil);			OffsetRect(r,18,0);		end;	end;Procedure UpdateAnimationEditorWindow;		begin	SetctlValue(AnimationNumber,PaletteScrollArray[1]);	SetctlValue(AnimationSequence,PaletteScrollArray[2]);	SetctlValue(AnimationSpeed,PaletteScrollArray[3]);	with CritterDefinition[AnimationNumber] do		begin			SetctlValue(Offset.h,PaletteScrollArray[4]);			SetctlValue(Offset.v,PaletteScrollArray[5]);			SetctlValue(Critter,PaletteScrollArray[6]);			SetctlValue(Mask,PaletteScrollArray[7]);		end;	DrawControls(AnimationEditorWindPtr);end;var	AnimationEditorWindTitle:str255;	AnimationEditorWind:newWindowParamBlk;Procedure SetUpAnimationEditorWindow;		var		r:rect;		i:integer;			begin		AnimationEditorWindTitle:='Animation Editor';		With AnimationEditorWind do			begin				param_length:=Sizeof(NewWindowParamBlk);				Wframe:=$80A8;				WTitle:=@AnimationEditorWindTitle;				wRefCon:=0;				SetRect(wZoom,0,0,18*9,100);				offsetRect(wZoom,0,32);				wColor:=nil;				wYOrigin:=0;				wXOrigin:=0;				wDataH:=100;				wDataW:=18*9;				wMaxH:=100;				wMaxW:=18*9;				wScrollver:=0;				wScrollHor:=0;				wPageVer:=0;				wPageHor:=0;				wInfoRefCon:=0;				wInfoHeight:=0;				wFrameDefProc:=nil;				wInfoDefProc:=nil;				wContDefProc:=@UpdateAnimationEditorWindow;				wPosition:=wZoom;				wPlane:=-1;				wStorage:=nil;			end;		AnimationEditorWindPtr:=NewWindow(AnimationEditorWind);			SetRect(r,0,0,17,100);	for i := 1 to 8 do		begin	  	AnimationScrollArray[i]:=NewControl(AnimationEditorWindPtr,r,'',$0003,0,1,16,ProcPtr($06000000),0,nil);			OffsetRect(r,18,0);		end;	end;		Procedure SetUpTerrainOffScreen;		var		i:integer;			begin	  TerrainHandle:=TerrainTypeHandle(NewHandle(256*256,MemoryID,SpecialMem+PageAligned+Fixedblk+Locked,nil));				for i:=0 to 255 do			TerrainHandle^^[0,i]:=0;		for i:=1 to 255 do			TerrainHandle^^[i]:=TerrainHandle^^[0];	end;Procedure SetUpCritterTerrainOffScreen;		var		i:integer;			begin	  CritterTerrainHandle:=TerrainTypeHandle(NewHandle(256*256,MemoryID,SpecialMem+PageAligned+Fixedblk+Locked,nil));				for i:=0 to 255 do			CritterTerrainHandle^^[0,i]:=0;		for i:=1 to 255 do			CritterTerrainHandle^^[i]:=CritterTerrainHandle^^[0];	end;Procedure UpdateTerrainWindow;		var		ShapeRect,		TempRect,		DestRect,		PortRect:Rect;		i,j,RightSide,BottomSide:integer;			begin		PortRect:=TerrainWindPtr^.PortRect;		SetRect(ShapeRect,0,0,scale,scale);		RightSide:=PortRect.right div Scale +1;		if RightSide>255 then			RightSide:=255;		BottomSide:=PortRect.bottom div Scale +1 ;		if BottomSide>255 then			BottomSide:=255;					for i:=PortRect.left div Scale to RightSide do			for j:=PortRect.top div Scale to BottomSide do				begin					TempRect:=ShapeRect;					OffsetRect(TempRect,TerrainHandle^^[j,i] div 16 *scale,TerrainHandle^^[j,i] mod 16 *scale);					PPtoPort(ShapeOffscreenPort^.PortInfo,TempRect,i*scale,j*scale,SrcCopy);				end;		SetRect(ShapeRect,0,0,32,32);		if CritterOption then			for i:=PortRect.left div Scale to RightSide do				for j:=PortRect.top div Scale to BottomSide do					With CritterDefinition[CritterTerrainHandle^^[j,i]] do						if not Empty then							begin								TempRect:=ShapeRect;								SetRect(DestRect,0,0,scale,scale);								OffsetRect(TempRect,0,32*Mask);								OffsetRect(DestRect,i*scale+Offset.h,j*scale+Offset.v);								CopyPixels(CritterPort^.PortInfo,TerrainWindPtr^.PortInfo,TempRect,DestRect,NotSrcBic,TerrainWindPtr^.VisRgn);								TempRect:=ShapeRect;								OffsetRect(TempRect,0,32*Critter);								CopyPixels(CritterPort^.PortInfo,TerrainWindPtr^.PortInfo,TempRect,DestRect,SrcOr,TerrainWindPtr^.VisRgn);							end;		SetSolidPenPat(0);		PortRect.Top:=TerrainCopyRect.Top*scale;		PortRect.Left:=TerrainCopyRect.Left*scale;		PortRect.Bottom:=(TerrainCopyRect.Bottom+1)*scale;		PortRect.Right:=(TerrainCopyRect.Right+1)*scale;		FrameRect(PortRect);		SetSolidPenPat(1);		PortRect.Top:=TerrainPastePoint.v*scale;		PortRect.Left:=TerrainPastePoint.h*scale;		PortRect.Bottom:=(TerrainPastePoint.v+1)*scale;		PortRect.Right:=(TerrainPastePoint.h+1)*scale;		FrameRect(PortRect);	end;var	TerrainWindTitle:str255;	TerrainWind:newWindowParamBlk;Procedure SetUpTerrainWindow;		begin		TerrainWindTitle:='Terrain';		With TerrainWind do			begin				param_length:=Sizeof(NewWindowParamBlk);				Wframe:=$9DA8;				WTitle:=@TerrainWindTitle;				wRefCon:=0;				SetRect(wZoom,0,0,8*32,32*5);				offsetRect(wZoom,45,28);				wColor:=nil;				wYOrigin:=0;				wXOrigin:=0;				wDataH:=8192;				wDataW:=8192;				wMaxH:=200;				wMaxW:=320;				wScrollver:=32;				wScrollHor:=32;				wPageVer:=32*4;				wPageHor:=32*4;				wInfoRefCon:=0;				wInfoHeight:=0;				wFrameDefProc:=nil;				wInfoDefProc:=nil;				wContDefProc:=@UpdateTerrainWindow;				SetRect(wPosition,0,0,128,128);				offsetRect(wPosition,185,24);				wPlane:=-1;				wStorage:=nil;			end;		TerrainWindPtr:=NewWindow(TerrainWind);	end;	Procedure UpdateEditorWindow;		var		ShapeRect:Rect;		i:integer;			begin		SetRect(ShapeRect,0,0,32,32);		if CritterOption then			begin				OffsetRect(ShapeRect,0,32*CritterShapeNumber);				CopyPixels(CritterPort^.PortInfo,EditorWindPtr^.PortInfo,ShapeRect,EditorWindPtr^.portrect,SrcCopy,EditorWindPtr^.VisRgn);			end		else			begin				OffsetRect(ShapeRect,0,32*EditorShapeNumber);				CopyPixels(ShapePort^.PortInfo,EditorWindPtr^.PortInfo,ShapeRect,EditorWindPtr^.portrect,SrcCopy,EditorWindPtr^.VisRgn);			end;		if GridOption then			PPtoPort(GridPort^.PortInfo,GridPort^.PortRect,0,0,NotSrcBic);	end;var	EditorWindTitle:str255;	EditorWind:newWindowParamBlk;Procedure SetUpEditorWindow;		begin		EditorWindTitle:='Editor';		With EditorWind do			begin				param_length:=Sizeof(NewWindowParamBlk);				Wframe:=$80A0;				WTitle:=@EditorWindTitle;				wRefCon:=0;				SetRect(wZoom,0,0,128,128);				OffsetRect(wZoom,50,32);				wColor:=nil;				wYOrigin:=0;				wXOrigin:=0;				wDataH:=128;				wDataW:=128;				wMaxH:=128;				wMaxW:=128;				wScrollver:=0;				wScrollHor:=0;				wPageVer:=0;				wPageHor:=0;				wInfoRefCon:=0;				wInfoHeight:=0;				wFrameDefProc:=nil;				wInfoDefProc:=nil;				wContDefProc:=@UpdateEditorWindow;				wPosition:=wZoom;				wPlane:=-1;				wStorage:=nil;			end;		EditorWindPtr:=NewWindow(EditorWind);	end;Procedure UpdatePaletteWindow;		var		ColorRect:Rect;		i:integer;			begin		SetRect(ColorRect,0,0,16,16);		for i:=0 to 15 do			begin				SetSolidPenPat(i);				PaintRect(ColorRect);				if i=PaletteColorNumber then					begin						setSolidPenPat(15-i);						FrameRect(ColorRect);					end;				OffsetRect(ColorRect,16,0);			end;	end;var	PaletteWindTitle:str255;	PaletteWind:newWindowParamBlk;Procedure SetUpPaletteWindow;		begin		PaletteWindTitle:='Palette';		With PaletteWind do			begin				param_length:=Sizeof(NewWindowParamBlk);				Wframe:=$80A0;				WTitle:=@PaletteWindTitle;				wRefCon:=0;				SetRect(wZoom,0,0,256,16);				OffsetRect(wZoom,50,180);				wColor:=nil;				wYOrigin:=0;				wXOrigin:=0;				wDataH:=16;				wDataW:=256;				wMaxH:=16;				wMaxW:=256;				wScrollver:=0;				wScrollHor:=0;				wPageVer:=0;				wPageHor:=0;				wInfoRefCon:=0;				wInfoHeight:=0;				wFrameDefProc:=nil;				wInfoDefProc:=nil;				wContDefProc:=@UpdatePaletteWindow;				wPosition:=wZoom;				wPlane:=-1;				wStorage:=nil;			end;		PaletteWindPtr:=NewWindow(PaletteWind);	end;procedure SetUpCrossCursor;	var		addr:longint;	begin		with CrossCursor do			begin				addr := Ord4(@data);				StuffHex(addr,'00000F0000000000');				StuffHex(addr+8,'00000F0000000000');				StuffHex(addr+16,'00000F0000000000');				StuffHex(addr+24,'00000F0000000000');				StuffHex(addr+32,'00000F0000000000');				StuffHex(addr+40,'FFFFFFFFFFF00000');				StuffHex(addr+48,'00000F0000000000');				StuffHex(addr+56,'00000F0000000000');				StuffHex(addr+64,'00000F0000000000');				StuffHex(addr+72,'00000F0000000000');				StuffHex(addr+80,'00000F0000000000');				StuffHex(addr+88,'0000000000000000');				StuffHex(addr+96,'0000000000000000');				StuffHex(addr+104,'0000000000000000');				StuffHex(addr+112,'0000000000000000');				StuffHex(addr+112,'0000000000000000');				StuffHex(addr+128,'0000000000000000');				StuffHex(addr+136,'0000000000000000');				StuffHex(addr+144,'0000000000000000');				StuffHex(addr+152,'0000000000000000');				StuffHex(addr+160,'0000000000000000');				StuffHex(addr+168,'0000000000000000');				hotSpot.h:=5;				hotSpot.v:=5;				CursorHeight:=11;				CursorWidth:=4;			end;	end;	end.